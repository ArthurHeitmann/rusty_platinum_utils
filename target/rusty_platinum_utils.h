/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdint.h>
#include <stdbool.h>

#define SceneData void
#define WindowedContext void
#define RenderState void
#define Rc_WindowedContext void

SceneData *rpu_load_wmb_from_path(const char *wmb_path);

SceneData *rpu_load_wmb_from_bytes(const char *name,
                                   const uint8_t *wmb,
                                   size_t wmb_size,
                                   const uint8_t *wta_wtb,
                                   size_t wta_wtb_size,
                                   const uint8_t *wtp,
                                   size_t wtp_size);

Rc_WindowedContext *rpu_new_context(void);

RenderState *rpu_new_renderer(Rc_WindowedContext *context,
                              uint32_t width,
                              uint32_t height,
                              SceneData *scene_data);

void rpu_drop_renderer(RenderState *state);

int32_t rpu_render(RenderState *state,
                   uint8_t *buffer,
                   size_t buffer_size,
                   uint32_t width,
                   uint32_t height,
                   float bg_r,
                   float bg_g,
                   float bg_b,
                   float bg_a);

void rpu_add_camera_rotation(RenderState *state, float x, float y);

void rpu_add_camera_offset(RenderState *state, float x, float y);

void rpu_zoom_camera_by(RenderState *state, float distance);

void rpu_auto_set_target(RenderState *state);

void rpu_set_model_visibility(RenderState *state, uint32_t model_id, bool visibility);

const uint32_t *rpu_get_model_states(RenderState *state);

void *malloc(size_t size);

void free(void *ptr);
